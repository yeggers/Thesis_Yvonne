import numpy as np 
import pylab as pl
import matplotlib.pyplot as plt








class Radar(object):

    def __init__(self, fig, titles, labels, num_steps, rect=None):
        if rect is None:
            rect = [0, 0, 1, 1]

        self.n = len(titles)
        self.angles = np.arange(90, 90+360, 360.0/self.n)%360
        self.axes = [fig.add_axes(rect, projection="polar", label="axes%d" % i) 
                         for i in range(self.n)]

        self.ax = self.axes[0]
        self.ax.set_thetagrids(self.angles, labels=titles, fontsize=14)

        for ax in self.axes[1:]:
            ax.patch.set_visible(False)
            ax.grid("off")
            ax.xaxis.set_visible(False)

        for ax, angle, label in zip(self.axes, self.angles, labels):
            ax.set_rgrids(range(1, num_steps + 1), angle=angle, labels=label)
            ax.spines["polar"].set_visible(False)
            ax.set_ylim(0, num_steps)

    def plot(self, values, *args, **kw):
        angle = np.deg2rad(np.r_[self.angles, self.angles[0]])
        values = np.r_[values, values[0]]
        self.ax.plot(angle, values, *args, **kw)


# generation2 = np.array([[0.42500000000000004, 0.004, 4.9, 0.22500000000000003, 0.007, 1.2000000000000002, 8], [0.22500000000000003, 0.0018626972739522207, 1.7387138255167809, 0.325, 0.004, 1.5000000000000002, 6], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.8562874371034583, 11], [0.42500000000000004, 0.004, 4.9, 0.325, 0.007, 1.5000000000000002, 6], [0.22500000000000003, 0.002, 1.8000000000000003, 0.22500000000000003, 0.004, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.325, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 1.5000000000000002, 0.325, 0.007, 1.2000000000000002, 8]])
# generation3 = np.array( [[0.22500000000000003,0.0018626972739522207, 1.7387138255167809, 0.325, 0.004, 1.5000000000000002, 6], [0.42500000000000004, 0.004, 4.9, 0.22500000000000003, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.004, 4.9, 0.325, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.22500000000000003, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.22500000000000003, 0.007319761106026491, 1.2000000000000002, 8], [0.42500000000000004, 0.003, 3.2, 0.275, 0.004, 1.9000000000000001, 11], [0.42500000000000004, 0.004, 4.9, 0.22500000000000003, 0.007, 1.2000000000000002, 8]])
# generation9 = np.array([[0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.8450641468450035, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 6.629095211303273], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8]])

# generation10 = np.array([[0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.17903663431796124, 0.007, 1.3327432399626835, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 6.629095211303273], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 8], [0.42500000000000004, 0.004, 4.9, 0.2239442645573944, 0.007, 1.2000000000000002, 7.766187989755873]])



# num_steps = 10
# minima = np.array([0.225, 0.001, 0, 0.225, 0.001, 0, 5])
# maxima = np.array([0.725, 0.008, 7, 0.725, 0.008 , 7, 15])
# steps = (maxima - minima)/num_steps


# fig = pl.figure(figsize=(6, 6))

# titles = ['alpha_training', 'lambda_training', 'vth_training', 'alpha_inference', 'lambda_inference', 'vth_inferece', 'tau_max']

# labels = [np.round(np.linspace(minima[0], maxima[0], num_steps), 3), np.round(np.linspace(minima[1], maxima[1], num_steps), 4), np.round(np.linspace(minima[2], maxima[2], num_steps), 1), np.round(np.linspace(minima[3], maxima[3], num_steps), 3), np.round(np.linspace(minima[4], maxima[4], num_steps), 4), np.round(np.linspace(minima[5], maxima[5], num_steps), 1), np.round(np.linspace(minima[6], maxima[6], num_steps), 0)
# ]


# radar = Radar(fig, titles, labels, num_steps)
# print(generation2[0])
# print(generation3[0])
# print(generation9[0])
# print((generation2[0] - minima)/steps + 1)

# for i in range(len(generation2)):
#     radar.plot((generation2[i] - minima)/steps + 1,  "-", lw=2, alpha=0.4, label= 'individual_{}'.format(i))
   
# radar.ax.legend()

# plt.savefig('star_plot_gen9')